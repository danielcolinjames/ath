{"version":3,"sources":["webpack://Vibrant/webpack/bootstrap","webpack://Vibrant/../vibrant-color/src/index.ts","webpack://Vibrant/../vibrant-color/src/converter.ts","webpack://Vibrant/./src/pipeline/index.worker.ts","webpack://Vibrant/../vibrant-core/src/pipeline/worker/host.ts","webpack://Vibrant/../vibrant-worker/src/worker.ts","webpack://Vibrant/./src/pipeline/index.ts","webpack://Vibrant/../vibrant-quantizer-mmcq/src/index.ts","webpack://Vibrant/../vibrant-quantizer-mmcq/src/vbox.ts","webpack://Vibrant/../vibrant-image/src/histogram.ts","webpack://Vibrant/../vibrant-quantizer-mmcq/src/pqueue.ts","webpack://Vibrant/../vibrant-generator-default/src/index.ts","webpack://Vibrant/../vibrant-core/src/pipeline/index.ts","webpack://Vibrant/../vibrant-image/src/index.ts"],"names":[],"mappings":"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","file":"ce4e11e0869042e47f66.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","import { rgbToHsl, rgbToHex } from './converter'\n\nexport interface Filter {\n  (red: number, green: number, blue: number, alpha: number): boolean\n}\n\n/**\n * 3d floating pointer vector\n */\nexport type Vec3 = [number, number, number]\n\n/**\n * The layout for a node-vibrant Palette. Allows you to keep track of\n */\nexport interface Palette {\n  Vibrant: Swatch | null\n  Muted: Swatch | null\n  DarkVibrant: Swatch | null\n  DarkMuted: Swatch | null\n  LightVibrant: Swatch | null\n  LightMuted: Swatch | null\n  // ?\n  [name: string]: Swatch | null\n}\n\nexport class Swatch {\n  static applyFilters (colors: Swatch[], filters: Filter[]): Swatch[] {\n    return filters.length > 0\n      ? colors.filter(({ r, g, b }) => {\n        for (let j = 0; j < filters.length; j++) {\n          if (!filters[j](r, g, b, 255)) return false\n        }\n        return true\n      })\n      : colors\n  }\n\n  /**\n   * Make a value copy of a swatch based on a previous one. Returns a new Swatch instance\n   * @param {Swatch} swatch\n   */\n  static clone (swatch: Swatch) {\n    return new Swatch(swatch._rgb, swatch._population)\n  }\n  private _hsl: Vec3\n  private _rgb: Vec3\n  private _yiq: number\n  private _population: number\n  private _hex: string\n\n  /**\n   * The red value in the RGB value\n   */\n  get r (): number {\n    return this._rgb[0]\n  }\n  /**\n   * The green value in the RGB value\n   */\n  get g (): number {\n    return this._rgb[1]\n  }\n  /**\n   * The blue value in the RGB value\n   */\n  get b (): number {\n    return this._rgb[2]\n  }\n  /**\n   * The color value as a rgb value\n   */\n  get rgb (): Vec3 {\n    return this._rgb\n  }\n  /**\n   * The color value as a hsl value\n   */\n  get hsl (): Vec3 {\n    if (!this._hsl) {\n      let [r, g, b] = this._rgb\n      this._hsl = rgbToHsl(r, g, b)\n    }\n    return this._hsl\n  }\n\n  /**\n   * The color value as a hex string\n   */\n  get hex (): string {\n    if (!this._hex) {\n      let [r, g, b] = this._rgb\n      this._hex = rgbToHex(r, g, b)\n    }\n    return this._hex\n  }\n  get population (): number {\n    return this._population\n  }\n\n  /**\n   * Get the JSON object for the swatch\n   */\n  toJSON (): {rgb: Vec3, population: number} {\n    return {\n      rgb: this.rgb,\n      population: this.population\n    }\n  }\n\n  /**\n   * Get the color value as a rgb value\n   * @deprecated Use property instead\n   */\n  // TODO: deprecate internally, use property instead\n  getRgb (): Vec3 {\n    return this._rgb\n  }\n  /**\n   * Get the color value as a hsl value\n   * @deprecated Use property instead\n   */\n  // TODO: deprecate internally, use property instead\n  getHsl (): Vec3 {\n    return this.hsl\n  }\n  /**\n   * @deprecated Use property instead\n   */\n  // TODO: deprecate internally, use property instead\n  getPopulation (): number {\n    return this._population\n  }\n  /**\n   * Get the color value as a hex string\n   * @deprecated Use property instead\n   */\n  // TODO: deprecate internally, use property instead\n  getHex (): string {\n    return this.hex\n  }\n\n  private getYiq (): number {\n    if (!this._yiq) {\n      let rgb = this._rgb\n      this._yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000\n    }\n    return this._yiq\n  }\n\n  private _titleTextColor: string\n  private _bodyTextColor: string\n\n  get titleTextColor () {\n    if (this._titleTextColor) {\n      this._titleTextColor = this.getYiq() < 200 ? '#fff' : '#000'\n    }\n    return this._titleTextColor\n  }\n  get bodyTextColor () {\n    if (this._bodyTextColor) {\n      this._bodyTextColor = this.getYiq() < 150 ? '#fff' : '#000'\n    }\n    return this._bodyTextColor\n  }\n  getTitleTextColor (): string {\n    return this.titleTextColor\n  }\n\n  getBodyTextColor (): string {\n    return this.bodyTextColor\n  }\n\n  constructor (rgb: Vec3, population: number) {\n    this._rgb = rgb\n    this._population = population\n  }\n}\n","import { Vec3 } from './'\n\nexport const DELTAE94_DIFF_STATUS = {\n  NA: 0,\n  PERFECT: 1,\n  CLOSE: 2,\n  GOOD: 10,\n  SIMILAR: 50\n}\n\n/**\n * Converts hex string to RGB\n * @param hex - The hex value you with to get the RGB value of\n * @returns an array in the order of `red, green, blue` numerical values\n */\nexport function hexToRgb (hex: string): Vec3 {\n  let m = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\n\n  if (!m) throw new RangeError(`'${hex}' is not a valid hex color`)\n\n  return [m[1], m[2], m[3]].map((s) => parseInt(s, 16)) as Vec3\n}\n\n/**\n * Given values for an RGB color convert to and return a valid HEX string\n * @param r - Red value in RGB\n * @param g - Green value in RGB\n * @param b - Blue value in RGB\n * @returns a valid hex string with pre-pending pound sign\n */\nexport function rgbToHex (r: number, g: number, b: number): string {\n  return '#' + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1, 7)\n}\n\n/**\n * Given values for an RGB color convert to and return a valid HSL value\n * @param r - Red value in RGB\n * @param g - Green value in RGB\n * @param b - Blue value in RGB\n * @returns an array in the order of `hue, saturation, light` numerical values\n */\nexport function rgbToHsl (r: number, g: number, b: number): Vec3 {\n  r /= 255\n  g /= 255\n  b /= 255\n  let max = Math.max(r, g, b)\n  let min = Math.min(r, g, b)\n  let h: number = 0\n  let s: number = 0\n  let l = (max + min) / 2\n  if (max !== min) {\n    let d = max - min\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min)\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0)\n        break\n      case g:\n        h = (b - r) / d + 2\n        break\n      case b:\n        h = (r - g) / d + 4\n        break\n    }\n\n    h /= 6\n  }\n  return [h, s, l]\n}\n\nexport function hslToRgb (h: number, s: number, l: number): Vec3 {\n  let r: number\n  let g: number\n  let b: number\n\n  function hue2rgb (p: number, q: number, t: number): number {\n    if (t < 0) t += 1\n    if (t > 1) t -= 1\n    if (t < 1 / 6) return p + (q - p) * 6 * t\n    if (t < 1 / 2) return q\n    if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6\n    return p\n  }\n\n  if (s === 0) {\n    r = g = b = l\n  } else {\n    let q = l < 0.5 ? l * (1 + s) : l + s - (l * s)\n    let p = 2 * l - q\n    r = hue2rgb(p, q, h + 1 / 3)\n    g = hue2rgb(p, q, h)\n    b = hue2rgb(p, q, h - (1 / 3))\n  }\n  return [\n    r * 255,\n    g * 255,\n    b * 255\n  ]\n}\n\nexport function rgbToXyz (r: number, g: number, b: number): Vec3 {\n  r /= 255\n  g /= 255\n  b /= 255\n  r = r > 0.04045 ? Math.pow((r + 0.005) / 1.055, 2.4) : r / 12.92\n  g = g > 0.04045 ? Math.pow((g + 0.005) / 1.055, 2.4) : g / 12.92\n  b = b > 0.04045 ? Math.pow((b + 0.005) / 1.055, 2.4) : b / 12.92\n\n  r *= 100\n  g *= 100\n  b *= 100\n\n  let x = r * 0.4124 + g * 0.3576 + b * 0.1805\n  let y = r * 0.2126 + g * 0.7152 + b * 0.0722\n  let z = r * 0.0193 + g * 0.1192 + b * 0.9505\n\n  return [x, y, z]\n}\n\nexport function xyzToCIELab (x: number, y: number, z: number): Vec3 {\n  let REF_X = 95.047\n  let REF_Y = 100\n  let REF_Z = 108.883\n\n  x /= REF_X\n  y /= REF_Y\n  z /= REF_Z\n\n  x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116\n  y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116\n  z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116\n\n  let L = 116 * y - 16\n  let a = 500 * (x - y)\n  let b = 200 * (y - z)\n\n  return [L, a, b]\n}\n\nexport function rgbToCIELab (r: number, g: number, b: number): Vec3 {\n  let [x, y, z] = rgbToXyz(r, g, b)\n  return xyzToCIELab(x, y, z)\n}\n\nexport function deltaE94 (lab1: Vec3, lab2: Vec3): number {\n  let WEIGHT_L = 1\n  let WEIGHT_C = 1\n  let WEIGHT_H = 1\n\n  let [L1, a1, b1] = lab1\n  let [L2, a2, b2] = lab2\n  let dL = L1 - L2\n  let da = a1 - a2\n  let db = b1 - b2\n\n  let xC1 = Math.sqrt(a1 * a1 + b1 * b1)\n  let xC2 = Math.sqrt(a2 * a2 + b2 * b2)\n\n  let xDL = L2 - L1\n  let xDC = xC2 - xC1\n  let xDE = Math.sqrt(dL * dL + da * da + db * db)\n\n  let xDH = (Math.sqrt(xDE) > Math.sqrt(Math.abs(xDL)) + Math.sqrt(Math.abs(xDC)))\n    ? Math.sqrt(xDE * xDE - xDL * xDL - xDC * xDC)\n    : 0\n\n  let xSC = 1 + 0.045 * xC1\n  let xSH = 1 + 0.015 * xC1\n\n  xDL /= WEIGHT_L\n  xDC /= WEIGHT_C * xSC\n  xDH /= WEIGHT_H * xSH\n\n  return Math.sqrt(xDL * xDL + xDC * xDC + xDH * xDH)\n}\n\nexport function rgbDiff (rgb1: Vec3, rgb2: Vec3): number {\n  let lab1 = rgbToCIELab.apply(undefined, rgb1)\n  let lab2 = rgbToCIELab.apply(undefined, rgb2)\n  return deltaE94(lab1, lab2)\n}\n\nexport function hexDiff (hex1: string, hex2: string): number {\n  let rgb1 = hexToRgb(hex1)\n  let rgb2 = hexToRgb(hex2)\n\n  return rgbDiff(rgb1, rgb2)\n}\n\nexport function getColorDiffStatus (d: number): string {\n  if (d < DELTAE94_DIFF_STATUS.NA) {\n    return 'N/A'\n  }\n  // Not perceptible by human eyes\n  if (d <= DELTAE94_DIFF_STATUS.PERFECT) {\n    return 'Perfect'\n  }\n  // Perceptible through close observation\n  if (d <= DELTAE94_DIFF_STATUS.CLOSE) {\n    return 'Close'\n  }\n  // Perceptible at a glance\n  if (d <= DELTAE94_DIFF_STATUS.GOOD) {\n    return 'Good'\n  }\n  // Colors are more similar than opposite\n  if (d < DELTAE94_DIFF_STATUS.SIMILAR) {\n    return 'Similar'\n  }\n  return 'Wrong'\n\n}\n","import runPipelineInWorker from '@vibrant/core/lib/pipeline/worker/host'\nimport pipeline from './'\n\nrunPipelineInWorker(self, pipeline)\n","import runInWorker from '@vibrant/worker/lib/worker'\nimport { Pipeline } from '../index'\n\nexport default function runPipelineInWorker (self: Window, pipeline: Pipeline) {\n  runInWorker(self, (imageData, opts) =>\n    pipeline.process(imageData, opts)\n  )\n}\n","import { Resolvable } from '@vibrant/types'\nimport {\n  WorkerRequest,\n  WorkerResponse,\n  WorkerErrorResponse\n} from './common'\n\nexport default function runInWorker<R> (self: Window, fn: (...args: any[]) => Resolvable<R>) {\n  self.onmessage = (event) => {\n    let data: WorkerRequest = event.data\n\n    let { id, payload } = data\n\n    let response: WorkerResponse<R> | WorkerErrorResponse\n\n    Promise.resolve(fn(...payload))\n      .then((ret) => {\n        (self as any).postMessage({\n          id,\n          type: 'return',\n          payload: ret\n        })\n      })\n      .catch((e) => {\n        (self as any).postMessage({\n          id,\n          type: 'error',\n          payload: (e as Error).message\n        })\n      })\n  }\n}\n","import MMCQ from '@vibrant/quantizer-mmcq'\nimport DefaultGenerator from '@vibrant/generator-default'\n\nimport { BasicPipeline } from '@vibrant/core/lib/pipeline'\n\nconst pipeline = new BasicPipeline()\n  .filter.register('default', (r: number, g: number, b: number, a: number) =>\n    a >= 125\n    && !(r > 250 && g > 250 && b > 250)\n  )\n  .quantizer.register('mmcq', MMCQ)\n  .generator.register('default', DefaultGenerator)\n\nexport default pipeline\n","import { Quantizer, QuantizerOptions } from '@vibrant/quantizer'\nimport {\n  Pixels\n} from '@vibrant/image'\nimport { Filter, Swatch } from '@vibrant/color'\nimport VBox from './vbox'\nimport PQueue from './pqueue'\n\nconst fractByPopulations = 0.75\n\nfunction _splitBoxes (pq: PQueue<VBox>, target: number): void {\n  let lastSize = pq.size()\n  while (pq.size() < target) {\n    let vbox = pq.pop()\n\n    if (vbox && vbox.count() > 0) {\n      let [vbox1, vbox2] = vbox.split()\n\n      pq.push(vbox1)\n      if (vbox2 && vbox2.count() > 0) pq.push(vbox2)\n\n      // No more new boxes, converged\n      if (pq.size() === lastSize) {\n        break\n      } else {\n        lastSize = pq.size()\n      }\n    } else {\n      break\n    }\n  }\n}\n\nconst MMCQ = (pixels: Pixels, opts: QuantizerOptions): Array<Swatch> => {\n  if (pixels.length === 0 || opts.colorCount < 2 || opts.colorCount > 256) {\n    throw new Error('Wrong MMCQ parameters')\n  }\n\n  let vbox = VBox.build(pixels)\n  let colorCount = vbox.histogram.colorCount\n  let pq = new PQueue<VBox>((a, b) => a.count() - b.count())\n\n  pq.push(vbox)\n\n  // first set of colors, sorted by population\n  _splitBoxes(pq, fractByPopulations * opts.colorCount)\n\n  // Re-order\n  let pq2 = new PQueue<VBox>((a, b) => a.count() * a.volume() - b.count() * b.volume())\n  pq2.contents = pq.contents\n\n  // next set - generate the median cuts using the (npix * vol) sorting.\n  _splitBoxes(pq2, opts.colorCount - pq2.size())\n\n  // calculate the actual colors\n  return generateSwatches(pq2)\n}\n\nfunction generateSwatches (pq: PQueue<VBox>) {\n  let swatches: Swatch[] = []\n  while (pq.size()) {\n    let v = pq.pop()!\n    let color = v.avg()\n    let [r, g, b] = color\n    swatches.push(new Swatch(color, v.count()))\n  }\n  return swatches\n}\n\nexport default MMCQ\n","import { Vec3, Filter } from '@vibrant/color'\nimport { Pixels } from '@vibrant/image'\nimport Histogram from '@vibrant/image/lib/histogram'\nexport interface Dimension {\n  r1: number\n  r2: number\n  g1: number\n  g2: number\n  b1: number\n  b2: number\n  [d: string]: number\n}\n\nconst SIGBITS = 5\nconst RSHIFT = 8 - SIGBITS\n\nexport default class VBox {\n  static build (pixels: Pixels): VBox {\n    let h = new Histogram(pixels, { sigBits: SIGBITS })\n    let { rmin, rmax, gmin, gmax, bmin, bmax } = h\n    return new VBox(rmin, rmax, gmin, gmax, bmin, bmax, h)\n  }\n\n  dimension: Dimension\n\n  private _volume = -1\n  private _avg: Vec3 | null\n  private _count = -1\n\n  constructor (\n    r1: number, r2: number,\n    g1: number, g2: number,\n    b1: number, b2: number,\n    public histogram: Histogram\n  ) {\n    // NOTE: dimension will be mutated by split operation.\n    //       It must be specified explicitly, not from histogram\n    this.dimension = { r1, r2, g1, g2, b1, b2 }\n  }\n\n  invalidate (): void {\n    this._volume = this._count = -1\n    this._avg = null\n  }\n\n  volume (): number {\n    if (this._volume < 0) {\n      let { r1, r2, g1, g2, b1, b2 } = this.dimension\n      this._volume = (r2 - r1 + 1) * (g2 - g1 + 1) * (b2 - b1 + 1)\n    }\n    return this._volume\n  }\n\n  count (): number {\n    if (this._count < 0) {\n      let { hist, getColorIndex } = this.histogram\n      let { r1, r2, g1, g2, b1, b2 } = this.dimension\n      let c = 0\n\n      for (let r = r1; r <= r2; r++) {\n        for (let g = g1; g <= g2; g++) {\n          for (let b = b1; b <= b2; b++) {\n            let index = getColorIndex(r, g, b)\n            c += hist[index]\n          }\n        }\n      }\n      this._count = c\n    }\n    return this._count\n  }\n\n  clone (): VBox {\n    let { histogram } = this\n    let { r1, r2, g1, g2, b1, b2 } = this.dimension\n    return new VBox(r1, r2, g1, g2, b1, b2, histogram)\n  }\n\n  avg (): Vec3 {\n    if (!this._avg) {\n      let { hist, getColorIndex } = this.histogram\n      let { r1, r2, g1, g2, b1, b2 } = this.dimension\n      let ntot = 0\n      let mult = 1 << (8 - SIGBITS)\n      let rsum: number\n      let gsum: number\n      let bsum: number\n      rsum = gsum = bsum = 0\n\n      for (let r = r1; r <= r2; r++) {\n        for (let g = g1; g <= g2; g++) {\n          for (let b = b1; b <= b2; b++) {\n            let index = getColorIndex(r, g, b)\n            let h = hist[index]\n            ntot += h\n            rsum += (h * (r + 0.5) * mult)\n            gsum += (h * (g + 0.5) * mult)\n            bsum += (h * (b + 0.5) * mult)\n          }\n        }\n      }\n      if (ntot) {\n        this._avg = [\n          ~~(rsum / ntot),\n          ~~(gsum / ntot),\n          ~~(bsum / ntot)\n        ]\n      } else {\n        this._avg = [\n          ~~(mult * (r1 + r2 + 1) / 2),\n          ~~(mult * (g1 + g2 + 1) / 2),\n          ~~(mult * (b1 + b2 + 1) / 2)\n        ]\n      }\n\n    }\n    return this._avg\n  }\n\n  contains (rgb: Vec3): boolean {\n    let [r, g, b] = rgb\n    let { r1, r2, g1, g2, b1, b2 } = this.dimension\n    r >>= RSHIFT\n    g >>= RSHIFT\n    b >>= RSHIFT\n\n    return r >= r1 && r <= r2\n      && g >= g1 && g <= g2\n      && b >= b1 && b <= b2\n  }\n\n  split (): VBox[] {\n    let { hist, getColorIndex } = this.histogram\n    let { r1, r2, g1, g2, b1, b2 } = this.dimension\n    let count = this.count()\n    if (!count) return []\n    if (count === 1) return [this.clone()]\n    let rw = r2 - r1 + 1\n    let gw = g2 - g1 + 1\n    let bw = b2 - b1 + 1\n\n    let maxw = Math.max(rw, gw, bw)\n    let accSum: Uint32Array | null = null\n    let sum: number\n    let total: number\n    sum = total = 0\n\n    let maxd: 'r' | 'g' | 'b' | null = null\n\n    if (maxw === rw) {\n      maxd = 'r'\n      accSum = new Uint32Array(r2 + 1)\n      for (let r = r1; r <= r2; r++) {\n        sum = 0\n        for (let g = g1; g <= g2; g++) {\n          for (let b = b1; b <= b2; b++) {\n            let index = getColorIndex(r, g, b)\n            sum += hist[index]\n          }\n        }\n        total += sum\n        accSum[r] = total\n      }\n    } else if (maxw === gw) {\n      maxd = 'g'\n      accSum = new Uint32Array(g2 + 1)\n      for (let g = g1; g <= g2; g++) {\n        sum = 0\n        for (let r = r1; r <= r2; r++) {\n          for (let b = b1; b <= b2; b++) {\n            let index = getColorIndex(r, g, b)\n            sum += hist[index]\n          }\n        }\n        total += sum\n        accSum[g] = total\n      }\n    } else {\n      maxd = 'b'\n      accSum = new Uint32Array(b2 + 1)\n      for (let b = b1; b <= b2; b++) {\n        sum = 0\n        for (let r = r1; r <= r2; r++) {\n          for (let g = g1; g <= g2; g++) {\n            let index = getColorIndex(r, g, b)\n            sum += hist[index]\n          }\n        }\n        total += sum\n        accSum[b] = total\n      }\n    }\n\n    let splitPoint = -1\n    let reverseSum = new Uint32Array(accSum.length)\n    for (let i = 0; i < accSum.length; i++) {\n      let d = accSum[i]\n      if (splitPoint < 0 && d > total / 2) splitPoint = i\n      reverseSum[i] = total - d\n    }\n\n    let vbox = this\n\n    function doCut (d: string): VBox[] {\n      let dim1 = d + '1'\n      let dim2 = d + '2'\n      let d1 = vbox.dimension[dim1]\n      let d2 = vbox.dimension[dim2]\n      let vbox1 = vbox.clone()\n      let vbox2 = vbox.clone()\n      let left = splitPoint - d1\n      let right = d2 - splitPoint\n      if (left <= right) {\n        d2 = Math.min(d2 - 1, ~~(splitPoint + right / 2))\n        d2 = Math.max(0, d2)\n      } else {\n        d2 = Math.max(d1, ~~(splitPoint - 1 - left / 2))\n        d2 = Math.min(vbox.dimension[dim2], d2)\n      }\n\n      while (!accSum![d2]) d2++\n\n      let c2 = reverseSum[d2]\n      while (!c2 && accSum![d2 - 1]) c2 = reverseSum[--d2]\n\n      vbox1.dimension[dim2] = d2\n      vbox2.dimension[dim1] = d2 + 1\n\n      return [vbox1, vbox2]\n    }\n\n    return doCut(maxd)\n  }\n\n}\n","import { Pixels } from './index'\n\nexport interface HistogramOptions {\n  sigBits: number\n}\n\nexport default class Histogram {\n  bmin: number\n  bmax: number\n  gmin: number\n  gmax: number\n  rmin: number\n  rmax: number\n  hist: Uint32Array\n  private _colorCount: number\n  get colorCount () { return this._colorCount }\n  getColorIndex: (r: number, g: number, b: number) => number\n  constructor (public pixels: Pixels, public opts: HistogramOptions) {\n    const { sigBits } = opts\n    const getColorIndex = (r: number, g: number, b: number) =>\n      (r << (2 * sigBits)) + (g << sigBits) + b\n\n    this.getColorIndex = getColorIndex\n\n    const rshift = 8 - sigBits\n    const hn = 1 << (3 * sigBits)\n    let hist = new Uint32Array(hn)\n    let rmax: number\n    let rmin: number\n    let gmax: number\n    let gmin: number\n    let bmax: number\n    let bmin: number\n    let r: number\n    let g: number\n    let b: number\n    let a: number\n    rmax = gmax = bmax = 0\n    rmin = gmin = bmin = Number.MAX_VALUE\n    let n = pixels.length / 4\n    let i = 0\n\n    while (i < n) {\n\n      let offset = i * 4\n      i++\n      r = pixels[offset + 0]\n      g = pixels[offset + 1]\n      b = pixels[offset + 2]\n      a = pixels[offset + 3]\n\n      // Ignored pixels' alpha is marked as 0 in filtering stage\n      if (a === 0) continue\n\n      r = r >> rshift\n      g = g >> rshift\n      b = b >> rshift\n\n      let index = getColorIndex(r, g, b)\n      hist[index] += 1\n\n      if (r > rmax) rmax = r\n      if (r < rmin) rmin = r\n      if (g > gmax) gmax = g\n      if (g < gmin) gmin = g\n      if (b > bmax) bmax = b\n      if (b < bmin) bmin = b\n    }\n    this._colorCount = hist.reduce((total, c) => c > 0 ? total + 1 : total, 0)\n    this.hist = hist\n    this.rmax = rmax\n    this.rmin = rmin\n    this.gmax = gmax\n    this.gmin = gmin\n    this.bmax = bmax\n    this.bmin = bmin\n  }\n}\n","export interface PQueueComparator<T> {\n  (a: T, b: T): number\n}\n\nexport default class PQueue<T> {\n  contents: T[]\n  private _sorted: boolean\n  private _comparator: PQueueComparator<T>\n  private _sort (): void {\n    if (!this._sorted) {\n      this.contents.sort(this._comparator)\n      this._sorted = true\n    }\n  }\n\n  constructor (comparator: PQueueComparator<T>) {\n    this._comparator = comparator\n    this.contents = []\n    this._sorted = false\n  }\n\n  push (item: T): void {\n    this.contents.push(item)\n    this._sorted = false\n  }\n\n  peek (index?: number): T {\n    this._sort()\n    index = typeof index === 'number' ? index : this.contents.length - 1\n    return this.contents[index]\n  }\n\n  pop () {\n    this._sort()\n    return this.contents.pop()\n  }\n\n  size (): number {\n    return this.contents.length\n  }\n\n  map<U> (mapper: (item: T, index: number) => any): U[] {\n    this._sort()\n    return this.contents.map(mapper)\n  }\n}\n","import { Swatch, Palette } from '@vibrant/color'\nimport { Generator } from '@vibrant/generator'\nimport { hslToRgb } from '@vibrant/color/lib/converter'\n\ninterface DefaultGeneratorOptions {\n  targetDarkLuma: number,\n  maxDarkLuma: number,\n  minLightLuma: number,\n  targetLightLuma: number,\n  minNormalLuma: number,\n  targetNormalLuma: number,\n  maxNormalLuma: number,\n  targetMutesSaturation: number,\n  maxMutesSaturation: number,\n  targetVibrantSaturation: number,\n  minVibrantSaturation: number,\n  weightSaturation: number,\n  weightLuma: number,\n  weightPopulation: number\n}\n\nconst DefaultOpts: DefaultGeneratorOptions = {\n  targetDarkLuma: 0.26,\n  maxDarkLuma: 0.45,\n  minLightLuma: 0.55,\n  targetLightLuma: 0.74,\n  minNormalLuma: 0.3,\n  targetNormalLuma: 0.5,\n  maxNormalLuma: 0.7,\n  targetMutesSaturation: 0.3,\n  maxMutesSaturation: 0.4,\n  targetVibrantSaturation: 1.0,\n  minVibrantSaturation: 0.35,\n  weightSaturation: 3,\n  weightLuma: 6.5,\n  weightPopulation: 0.5\n}\n\nfunction _findMaxPopulation (swatches: Array<Swatch>): number {\n  let p = 0\n\n  swatches.forEach((s) => {\n    p = Math.max(p, s.population)\n  })\n\n  return p\n}\n\nfunction _isAlreadySelected (palette: Palette, s: Swatch): boolean {\n  return palette.Vibrant === s\n    || palette.DarkVibrant === s\n    || palette.LightVibrant === s\n    || palette.Muted === s\n    || palette.DarkMuted === s\n    || palette.LightMuted === s\n}\n\nfunction _createComparisonValue (\n  saturation: number, targetSaturation: number,\n  luma: number, targetLuma: number,\n  population: number, maxPopulation: number, opts: DefaultGeneratorOptions): number {\n\n  function weightedMean (...values: number[]) {\n    let sum = 0\n    let weightSum = 0\n    for (let i = 0; i < values.length; i += 2) {\n      let value = values[i]\n      let weight = values[i + 1]\n      sum += value * weight\n      weightSum += weight\n    }\n\n    return sum / weightSum\n  }\n\n  function invertDiff (value: number, targetValue: number): number {\n    return 1 - Math.abs(value - targetValue)\n  }\n\n  return weightedMean(\n    invertDiff(saturation, targetSaturation), opts.weightSaturation,\n    invertDiff(luma, targetLuma), opts.weightLuma,\n    population / maxPopulation, opts.weightPopulation\n  )\n\n}\n\nfunction _findColorVariation (palette: Palette, swatches: Array<Swatch>, maxPopulation: number,\n  targetLuma: number,\n  minLuma: number,\n  maxLuma: number,\n  targetSaturation: number,\n  minSaturation: number,\n  maxSaturation: number,\n  opts: DefaultGeneratorOptions): Swatch | null {\n\n  let max: Swatch | null = null\n  let maxValue = 0\n\n  swatches.forEach((swatch) => {\n    let [, s, l] = swatch.hsl\n\n    if (s >= minSaturation && s <= maxSaturation\n      && l >= minLuma && l <= maxLuma\n      && !_isAlreadySelected(palette, swatch)\n    ) {\n      let value = _createComparisonValue(s, targetSaturation, l, targetLuma, swatch.population, maxPopulation, opts)\n\n      if (max === null || value > maxValue) {\n        max = swatch\n        maxValue = value\n      }\n\n    }\n  })\n\n  return max\n}\n\nfunction _generateVariationColors (swatches: Array<Swatch>, maxPopulation: number, opts: DefaultGeneratorOptions): Palette {\n  let palette: Palette = {\n    Vibrant: null,\n    DarkVibrant: null,\n    LightVibrant: null,\n    Muted: null,\n    DarkMuted: null,\n    LightMuted: null\n  }\n  // mVibrantSwatch = findColor(TARGET_NORMAL_LUMA, MIN_NORMAL_LUMA, MAX_NORMAL_LUMA,\n  //     TARGET_VIBRANT_SATURATION, MIN_VIBRANT_SATURATION, 1f)\n  palette.Vibrant = _findColorVariation(palette, swatches, maxPopulation,\n    opts.targetNormalLuma,\n    opts.minNormalLuma,\n    opts.maxNormalLuma,\n    opts.targetVibrantSaturation,\n    opts.minVibrantSaturation,\n    1,\n    opts\n  )\n  // mLightVibrantSwatch = findColor(TARGET_LIGHT_LUMA, MIN_LIGHT_LUMA, 1f,\n  //     TARGET_VIBRANT_SATURATION, MIN_VIBRANT_SATURATION, 1f)\n  palette.LightVibrant = _findColorVariation(palette, swatches, maxPopulation,\n    opts.targetLightLuma,\n    opts.minLightLuma,\n    1,\n    opts.targetVibrantSaturation,\n    opts.minVibrantSaturation,\n    1,\n    opts\n  )\n  // mDarkVibrantSwatch = findColor(TARGET_DARK_LUMA, 0f, MAX_DARK_LUMA,\n  //     TARGET_VIBRANT_SATURATION, MIN_VIBRANT_SATURATION, 1f)\n  palette.DarkVibrant = _findColorVariation(palette, swatches, maxPopulation,\n    opts.targetDarkLuma,\n    0,\n    opts.maxDarkLuma,\n    opts.targetVibrantSaturation,\n    opts.minVibrantSaturation,\n    1,\n    opts\n  )\n  // mMutedSwatch = findColor(TARGET_NORMAL_LUMA, MIN_NORMAL_LUMA, MAX_NORMAL_LUMA,\n  //     TARGET_MUTED_SATURATION, 0f, MAX_MUTED_SATURATION)\n  palette.Muted = _findColorVariation(palette, swatches, maxPopulation,\n    opts.targetNormalLuma,\n    opts.minNormalLuma,\n    opts.maxNormalLuma,\n    opts.targetMutesSaturation,\n    0,\n    opts.maxMutesSaturation,\n    opts\n  )\n  // mLightMutedColor = findColor(TARGET_LIGHT_LUMA, MIN_LIGHT_LUMA, 1f,\n  //     TARGET_MUTED_SATURATION, 0f, MAX_MUTED_SATURATION)\n  palette.LightMuted = _findColorVariation(palette, swatches, maxPopulation,\n    opts.targetLightLuma,\n    opts.minLightLuma,\n    1,\n    opts.targetMutesSaturation,\n    0,\n    opts.maxMutesSaturation,\n    opts\n  )\n  // mDarkMutedSwatch = findColor(TARGET_DARK_LUMA, 0f, MAX_DARK_LUMA,\n  //     TARGET_MUTED_SATURATION, 0f, MAX_MUTED_SATURATION)\n  palette.DarkMuted = _findColorVariation(palette, swatches, maxPopulation,\n    opts.targetDarkLuma,\n    0,\n    opts.maxDarkLuma,\n    opts.targetMutesSaturation,\n    0,\n    opts.maxMutesSaturation,\n    opts\n  )\n  return palette\n}\n\nfunction _generateEmptySwatches (palette: Palette, maxPopulation: number, opts: DefaultGeneratorOptions): void {\n  if (!palette.Vibrant && !palette.DarkVibrant && !palette.LightVibrant) {\n    if (!palette.DarkVibrant && palette.DarkMuted) {\n      let [h, s, l] = palette.DarkMuted.hsl\n      l = opts.targetDarkLuma\n      palette.DarkVibrant = new Swatch(hslToRgb(h, s, l), 0)\n    }\n    if (!palette.LightVibrant && palette.LightMuted) {\n      let [h, s, l] = palette.LightMuted.hsl\n      l = opts.targetDarkLuma\n      palette.DarkVibrant = new Swatch(hslToRgb(h, s, l), 0)\n    }\n  }\n  if (!palette.Vibrant && palette.DarkVibrant) {\n    let [h, s, l] = palette.DarkVibrant.hsl\n    l = opts.targetNormalLuma\n    palette.Vibrant = new Swatch(hslToRgb(h, s, l), 0)\n  } else if (!palette.Vibrant && palette.LightVibrant) {\n    let [h, s, l] = palette.LightVibrant.hsl\n    l = opts.targetNormalLuma\n    palette.Vibrant = new Swatch(hslToRgb(h, s, l), 0)\n  }\n  if (!palette.DarkVibrant && palette.Vibrant) {\n    let [h, s, l] = palette.Vibrant.hsl\n    l = opts.targetDarkLuma\n    palette.DarkVibrant = new Swatch(hslToRgb(h, s, l), 0)\n  }\n  if (!palette.LightVibrant && palette.Vibrant) {\n    let [h, s, l] = palette.Vibrant.hsl\n    l = opts.targetLightLuma\n    palette.LightVibrant = new Swatch(hslToRgb(h, s, l), 0)\n  }\n  if (!palette.Muted && palette.Vibrant) {\n    let [h, s, l] = palette.Vibrant.hsl\n    l = opts.targetMutesSaturation\n    palette.Muted = new Swatch(hslToRgb(h, s, l), 0)\n  }\n  if (!palette.DarkMuted && palette.DarkVibrant) {\n    let [h, s, l] = palette.DarkVibrant.hsl\n    l = opts.targetMutesSaturation\n    palette.DarkMuted = new Swatch(hslToRgb(h, s, l), 0)\n  }\n  if (!palette.LightMuted && palette.LightVibrant) {\n    let [h, s, l] = palette.LightVibrant.hsl\n    l = opts.targetMutesSaturation\n    palette.LightMuted = new Swatch(hslToRgb(h, s, l), 0)\n  }\n}\n\nconst DefaultGenerator: Generator = (swatches: Array<Swatch>, opts?: DefaultGeneratorOptions): Palette => {\n  opts = Object.assign({}, DefaultOpts, opts)\n  let maxPopulation = _findMaxPopulation(swatches)\n\n  let palette = _generateVariationColors(swatches, maxPopulation, opts)\n  _generateEmptySwatches(palette, maxPopulation, opts)\n\n  return palette\n}\n\nexport default DefaultGenerator\n","import { ImageData, applyFilters } from '@vibrant/image'\nimport { Quantizer } from '@vibrant/quantizer'\nimport { Generator } from '@vibrant/generator'\nimport { Palette, Swatch, Filter } from '@vibrant/color'\n\nexport class Stage<T> {\n  private _map: { [name: string]: T } = {}\n  constructor (protected pipeline: BasicPipeline) { }\n  names () {\n    return Object.keys(this._map)\n  }\n  has (name: string) {\n    return !!this._map[name]\n  }\n  get (name: string) {\n    return this._map[name]\n  }\n  register (name: string, stageFn: T) {\n    this._map[name] = stageFn\n    return this.pipeline\n  }\n}\n\nexport interface ProcessResult {\n  colors: Swatch[]\n  palettes: { [name: string]: Palette }\n}\n\nexport interface StageOptions {\n  name: string\n  options?: any\n}\n\nexport interface ProcessOptions {\n  filters: string[]\n  quantizer: string | StageOptions\n  generators: (string | StageOptions)[]\n}\n\ninterface StageTask<Q> {\n  name: string\n  fn: Q\n  options?: any\n}\n\ninterface ProcessTasks {\n  filters: StageTask<Filter>[]\n  quantizer: StageTask<Quantizer>\n  generators: StageTask<Generator>[]\n}\n\nexport interface Pipeline {\n  // quantizer: Stage<Quantizer>\n  // generator: Stage<Generator>\n  process (imageData: ImageData, opts: ProcessOptions): Promise<ProcessResult>\n}\n\nexport class BasicPipeline implements Pipeline {\n  private _buildProcessTasks ({\n    filters,\n    quantizer,\n    generators\n  }: ProcessOptions): ProcessTasks {\n    // Support wildcard for generators\n    if (generators.length === 1 && generators[0] === '*') {\n      generators = this.generator.names()\n    }\n    return {\n      filters: filters.map(f => createTask(this.filter, f)),\n      quantizer: createTask(this.quantizer, quantizer),\n      generators: generators.map(g => createTask(this.generator, g))\n    }\n    function createTask<Q> (\n      stage: Stage<Q>,\n      o: string | StageOptions\n    ): StageTask<Q> {\n      let name: string\n      let options: any\n      if (typeof o === 'string') {\n        name = o\n      } else {\n        name = o.name\n        options = o.options\n      }\n\n      return {\n        name,\n        fn: stage.get(name),\n        options\n      }\n    }\n  }\n  filter: Stage<Filter> = new Stage(this)\n  quantizer: Stage<Quantizer> = new Stage(this)\n  generator: Stage<Generator> = new Stage(this)\n  async process (\n    imageData: ImageData,\n    opts: ProcessOptions\n  ): Promise<ProcessResult> {\n    let { filters, quantizer, generators } = this._buildProcessTasks(opts)\n    const imageFilterData = await this._filterColors(filters, imageData)\n    const colors = await this._generateColors(quantizer, imageFilterData)\n    const palettes = await this._generatePalettes(generators, colors)\n    return {\n      colors,\n      palettes\n    }\n  }\n  private _filterColors (filters: StageTask<Filter>[], imageData: ImageData) {\n    return Promise.resolve(\n      applyFilters(imageData, filters.map(({ fn }) => fn))\n    )\n  }\n  private _generateColors (\n    quantizer: StageTask<Quantizer>,\n    imageData: ImageData\n  ) {\n    return Promise.resolve(quantizer.fn(imageData.data, quantizer.options))\n  }\n  private async _generatePalettes (\n    generators: StageTask<Generator>[],\n    colors: Swatch[]\n  ) {\n    // Make a promise map that will run them \"concurrently\" (but return in expected result)\n    const promiseArr = await Promise.all(\n      generators.map(({ fn, options }) => Promise.resolve(fn(colors, options)))\n    )\n    // Map the values to the expected name\n    return Promise.resolve(\n      promiseArr.reduce(\n        (promises, promiseVal, i) => {\n          promises[generators[i].name] = promiseVal\n          return promises\n        },\n        {} as { [name: string]: Palette }\n      )\n    )\n  }\n}\n","import { Callback } from '@vibrant/types'\nimport { Filter } from '@vibrant/color'\n\nexport type ImageCallback = Callback<Image>\n\nexport type ImageSource = string | HTMLImageElement | Buffer\n\nexport type Pixels = Uint8ClampedArray | Buffer\nexport interface ImageData {\n  data: Pixels,\n  width: number,\n  height: number\n}\n\nexport interface ImageOptions {\n  quality: number\n  maxDimension: number\n}\n\nexport interface Image {\n  load (image: ImageSource): Promise<Image>\n  clear (): void\n  update (imageData: ImageData): void\n  getWidth (): number\n  getHeight (): number\n  resize (targetWidth: number, targetHeight: number, ratio: number): void\n  getPixelCount (): number\n  getImageData (): ImageData\n  remove (): void\n  scaleDown (opts: ImageOptions): void\n}\n\nexport interface ImageClass {\n  new(): Image\n}\n\nexport abstract class ImageBase implements Image {\n  abstract load (image: ImageSource): Promise<ImageBase>\n  abstract clear (): void\n  abstract update (imageData: ImageData): void\n  abstract getWidth (): number\n  abstract getHeight (): number\n  abstract resize (targetWidth: number, targetHeight: number, ratio: number): void\n  abstract getPixelCount (): number\n  abstract getImageData (): ImageData\n  abstract remove (): void\n\n  scaleDown (opts: ImageOptions): void {\n    let width: number = this.getWidth()\n    let height: number = this.getHeight()\n\n    let ratio: number = 1\n\n    if (opts.maxDimension > 0) {\n      let maxSide: number = Math.max(width, height)\n      if (maxSide > opts.maxDimension) ratio = opts.maxDimension / maxSide\n    } else {\n      ratio = 1 / opts.quality\n    }\n\n    if (ratio < 1) this.resize(width * ratio, height * ratio, ratio)\n  }\n}\n\nexport function applyFilters (imageData: ImageData, filters: Filter[]) {\n  if (filters.length > 0) {\n    let pixels = imageData.data\n    let n = pixels.length / 4\n    let offset\n    let r\n    let g\n    let b\n    let a\n    for (let i = 0; i < n; i++) {\n      offset = i * 4\n      r = pixels[offset + 0]\n      g = pixels[offset + 1]\n      b = pixels[offset + 2]\n      a = pixels[offset + 3]\n      // Mark ignored color\n      for (let j = 0; j < filters.length; j++) {\n        if (!filters[j](r, g, b, a)) {\n          pixels[offset + 3] = 0\n          break\n        }\n      }\n    }\n  }\n\n  return imageData\n}\n"],"sourceRoot":""}